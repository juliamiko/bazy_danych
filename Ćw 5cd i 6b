--Zadanie 5 

-- k) Zlicz i pogrupuj pracowników według pola ‘stanowisko’
SELECT stanowisko, COUNT(*) AS liczba_pracownikow
FROM ksiegowosc.pracownicy p
JOIN ksiegowosc.pensja pe ON p.id_pracownika = pe.id_pensji
GROUP BY stanowisko;

-- l) Policz średnią, minimalną i maksymalną płacę dla stanowiska ‘kierownik’
SELECT stanowisko, AVG(kwota) AS srednia_placa, MIN(kwota) AS minimalna_placa, MAX(kwota) AS maksymalna_placa
FROM ksiegowosc.pensja
WHERE stanowisko = 'Kierownik'
GROUP BY stanowisko;

-- m) Policz sumę wszystkich wynagrodzeń
SELECT SUM(kwota) AS suma_wynagrodzen
FROM (
    SELECT kwota FROM ksiegowosc.pensja
    UNION ALL
    SELECT kwota FROM ksiegowosc.premia
) AS wynagrodzenia;

-- f) Policz sumę wynagrodzeń w ramach danego stanowiska
SELECT stanowisko, SUM(kwota) AS suma_wynagrodzen
FROM (
    SELECT stanowisko, kwota FROM ksiegowosc.pensja
    UNION ALL
    SELECT 'Premia', kwota FROM ksiegowosc.premia
) AS wynagrodzenia_grupowane
GROUP BY stanowisko;

-- g) Wyznacz liczbę premii przyznanych dla pracowników danego stanowiska
SELECT p.stanowisko, COUNT(*) AS liczba_premii
FROM ksiegowosc.pensja p
JOIN ksiegowosc.wynagrodzenie w ON p.id_pensji = w.id_pensji
JOIN ksiegowosc.premia pr ON w.id_premii = pr.id_premii
GROUP BY p.stanowisko;

-- h) Usuń wszystkich pracowników mających pensję mniejszą niż 1200 zł
DELETE FROM ksiegowosc.pracownicy
WHERE id_pracownika IN (
    SELECT id_pracownika
    FROM ksiegowosc.wynagrodzenie w
    JOIN ksiegowosc.pensja p ON w.id_pensji = p.id_pensji
    WHERE kwota < 1200
);

Zadanie 6b

--a
UPDATE ksiegowosc.pracownicy
SET telefon2 = CONCAT('(+48) ', telefon2);

----b) Zmodyfikuj atrybut telefon w tabeli pracownicy tak, aby numer oddzielony był myślnikami
--UPDATE ksiegowosc.pracownicy
--SET telefon = CONCAT(SUBSTRING(telefon, 1, 3), '-', SUBSTRING(telefon, 4, 3), '-', SUBSTRING(telefon, 7, 3));


--ALTER TABLE ksiegowosc.pracownicy
--ADD telefon2 VARCHAR(20);
UPDATE ksiegowosc.pracownicy
SET telefon2 = CASE id_pracownika
                    WHEN 1 THEN '123-456-789'
                    WHEN 2 THEN '123-456-789'
                    WHEN 3 THEN '123-456-789'
                    WHEN 4 THEN '123-456-789'
                    WHEN 5 THEN '123-456-789'
                    WHEN 6 THEN '123-456-789'
                    WHEN 7 THEN '123-456-789'
                    WHEN 8 THEN '123-456-789'
                    WHEN 9 THEN '123-456-789'
                    WHEN 10 THEN '123-456-789'
                    END;


--c) Wyświetl dane pracownika, którego nazwisko jest najdłuższe, używając dużych liter:
SELECT TOP 1 UPPER(nazwisko) AS nazwisko_najdluzsze
FROM ksiegowosc.pracownicy
ORDER BY LEN(nazwisko) DESC;

--d) Wyświetl dane pracowników i ich pensje zakodowane przy pomocy algorytmu md5:
SELECT CONCAT(imie, ' ', nazwisko) AS pracownik, HASHBYTES('MD5', CONCAT_WS(' ', imie, nazwisko)) AS kod_pensji
FROM ksiegowosc.pracownicy
JOIN ksiegowosc.wynagrodzenie ON ksiegowosc.pracownicy.id_pracownika = ksiegowosc.wynagrodzenie.id_pracownika;

--f) Wyświetl pracowników, ich pensje oraz premie. Wykorzystaj złączenie lewostronne:
SELECT CONCAT(p.imie, ' ', p.nazwisko) AS pracownik, pe.kwota AS pensja, pr.kwota AS premia
FROM ksiegowosc.pracownicy p
LEFT JOIN ksiegowosc.wynagrodzenie w ON p.id_pracownika = w.id_pracownika
LEFT JOIN ksiegowosc.pensja pe ON w.id_pensji = pe.id_pensji
LEFT JOIN ksiegowosc.premia pr ON w.id_premii = pr.id_premii;

-- g) Wygeneruj raport
SELECT CONCAT('Pracownik ', p.imie, ' ', p.nazwisko, ', w dniu ', w.data, 
              ' otrzymał pensję całkowitą na kwotę ', 
              (pe.kwota + pr.kwota), 
              ' zł, gdzie wynagrodzenie zasadnicze wynosiło: ', 
              pe.kwota, ' zł, premia: ', pr.kwota, ' zł') AS raport
FROM ksiegowosc.pracownicy p
JOIN ksiegowosc.wynagrodzenie w ON p.id_pracownika = w.id_pracownika
JOIN ksiegowosc.pensja pe ON w.id_pensji = pe.id_pensji
JOIN ksiegowosc.premia pr ON w.id_premii = pr.id_premii;
